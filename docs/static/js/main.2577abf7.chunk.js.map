{"version":3,"sources":["Product.js","CartItem.js","Cart.js","serviceWorker.js","index.js","App.js"],"names":["Product","props","products","className","length","map","product","src","imageUrl","alt","name","key","id","onClick","handleAdd","CartItem","qty","price","toFixed","handleRemove","Cart","cartEmpty","getTotal","reduce","a","b","Boolean","window","location","hostname","match","ReactDOM","render","useState","getProducts","url","useEffect","fetch","response","json","result","item","fetchData","e","boughtItem","target","newList","index","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2577abf7.chunk.js","sourcesContent":["import React from 'react';\n\n\nexport default function Product(props) {\n        \n    const products = props.products\n\n    return(\n        <div className=\"display-wrapper\">\n            { products.length > 0 \n            && products.map(product=>\n                <img \n                    src={product.imageUrl} \n                    alt={product.name} \n                    key={product.id} \n                    id={product.id}  \n                    className=\"product-image\"\n                    onClick={props.handleAdd}/>\n                            )\n            }\n        </div>      \n    ) \n\n}\n","import React from 'react';\n\n\nexport default function CartItem(props){\n    \n    const products = props.products\n    \n    const CartProduct = () => {\n    return products.map(product=> product.qty === 0 ? null : \n    <tr className=\"cart-item\">\n        <td className=\"cart-item-name\">\n            <img src={product.imageUrl} alt={product.name} className=\"cart-item-img\" />\n            <h5>{product.name}</h5>\n        </td>\n        <td className=\"cart-item-price\">{product.price}</td>\n        <td className=\"cart-item-qty\">{product.qty}</td>\n        <td className=\"cart-item-total\">{(product.price*product.qty).toFixed(2)}</td>\n        <td className=\"cart-item-buttons\">\n            <button onClick={props.handleAdd} id={product.id} className=\"btn add-btn\">Add</button>\n            <button onClick={props.handleRemove} id={product.id} className=\"btn rmv-btn\">Remove</button>\n        </td>\n    </tr>\n    )\n    }\n    \n\n    return(\n        <CartProduct products={products} />\n    )\n}","import React from 'react'\n\nimport CartItem from './CartItem'\n\nexport default function Cart(props){\n    \n    const products = props.products\n    \n    const cartEmpty = <tr id=\"cart-empty\">Your cart is empty...</tr>\n    \n    const CartHeader = ()=> {\n        return (<thead><tr className=\"cart-header\">\n                    <th className=\"cart-item-name\">Product</th> \n                    <th className=\"cart-item-price\">Price</th> \n                    <th className=\"cart-item-qty\">Qty</th>\n                    <th className=\"cart-item-total\">Total Price</th>\n                    <th className=\"cart-item-buttons\"> </th>\n                </tr></thead>)}\n\n    const CartFooter = ()=> <tfoot><tr className=\"cart-footer\">\n                                    <th className=\"cart-item-name\"></th>\n                                    <th className=\"cart-item-price\"></th>\n                                    <th className=\"cart-item-qty\">TOTAL:</th>\n                                    <th className=\"cart-item-total\">{getTotal()}</th>\n                                    <th className=\"cart-item-buttons\"></th>\n                            </tr></tfoot>\n\n\n    const getTotal = ()=> {\n        return products.map(product=> product.qty*product.price).reduce((a,b)=>a+b,0).toFixed(2)\n    }\n\n    const DisplayItems = (props) => {\n        const {products, handleAdd, handleRemove} = props\n\n        if(products.map(product=> product.qty).reduce((a,b)=>a+b,0) === 0) {\n            return cartEmpty\n        } else { \n            return <CartItem products={products} handleAdd={handleAdd} handleRemove={handleRemove}/>\n        }\n    }\n\n\n    return(\n        <table id=\"cart-wrapper\">\n            <CartHeader />\n                <DisplayItems products={props.products} handleAdd={props.handleAdd} handleRemove={props.handleRemove}/>\n            <CartFooter />\n        </table>\n    )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport Product from './Product';\nimport Cart from './Cart'\n\n\n\nexport default function App() {\n\n  const [products, getProducts] = useState([]);\n\n  const url = \"https://raw.githubusercontent.com/razcristea/some-jsons/master/products.json\"\n  \n  \n  useEffect(() => {\n    async function fetchData() {   \n      const response = await fetch(url);\n      const result = await response.json();\n      result.map( item => item.qty = 0 )\n      getProducts(result); \n    }\n\n    fetchData();\n  }, []);\n    \n  \n    // const handleAdd = (e) =>{\n    //     const boughtItem = e.target.id\n    //     products.map(product=> product.id == boughtItem ? product.qty++ : null)\n    //     console.log(products.filter(item=> boughtItem == item.id))\n    // } \n  \n    \n    const handleAdd = (e) =>{\n      const boughtItem = e.target.id\n      const newList = products.map((product,index)=> {\n                                    if(product.id == boughtItem) {\n                                      product.qty++\n                                      return product\n                                    } else {\n                                      return product\n                                    }\n                                  })\n      getProducts(newList)\n    } \n\n\n    const handleRemove = (e) =>{\n        const boughtItem = e.target.id\n        const newList = products.map((product,index)=> {\n                                    if(product.id == boughtItem && product.qty > 0) {\n                                      product.qty--\n                                      return product\n                                    } else {\n                                      return product\n                                    }\n                                  })\n        getProducts(newList)\n    } \n    \n\n  return (\n    <>\n      <Product products={products} handleAdd={handleAdd}/>\n      <Cart products={products} handleAdd={handleAdd} handleRemove={handleRemove} />\n      </>\n  );\n}\n\n"],"sourceRoot":""}